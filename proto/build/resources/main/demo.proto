syntax = "proto3";


package michael.test;

message Empty {}


message StringMessage {
  string s       =1;
  string a_b_c       =2;
}


message IntMessage {
  int64 i       =1;
}



message RepeatedStringMessage {
  repeated string slist    =1;
}

message RepeatedIntMessage {
  repeated int64 i       =1;
}



message EnumMessage {
  enum Bar {
    BAR_A = 0;
    BAR_B = 5;
    BAR_C = 1234;
  }
  Bar bar   =1;
}

message RepeatedEnumMessage {
  enum Bar0 {
    BAR_A = 0;
    BAR_B = 5;
    BAR_C = 1234;
  }
  repeated Bar0 bar   =1;
}



message HelloRequest {
  string str       =1;
}


message Message1 {
  string str       =1;
  int64  i       =3;
}

message MessageDemo {
  string s       =1;
  int64  i       =3;
}




message DemoMessage {
  enum Foo {
    VALUE_A = 0;
    VALUE_B = 5;
    VALUE_C = 1234;
  }

  string str       =1;
  int32  index     =2;
  Foo foo          =3;

  MessageDemo  m2          =5;
  repeated Message1 m_list =6;
}



message L1Message {
  string l = 1;
}

message L2Message {
  string l = 1;
  L1Message l1 =2;
}


message L3Message {
  string l = 1;
  L2Message l2 =2;
}

message NestedMessage {
  message N1 {
    string str =1;
  }

  message N2 {
    message INM {
      string s =1;
    }
    N1 n1 =1;
    INM i =2;
  }
  message N3 {
    N2 n2 =1;
  }
  N3 n =1;
}



message MapMessage {
  string s = 4;
  map<string,string> m = 1;
}





message HelloReply {
  string reply     =1;
}


service DemoService {

  rpc SayHello (HelloRequest) returns (HelloReply);
}